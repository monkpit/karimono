{
  "name": "karimono",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "npm run codegen:check && tsc && vite build",
    "preview": "vite preview",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "typecheck": "tsc --noEmit",
    "test": "jest --coverageReporters=lcov --coverageReporters=text --coverageReporters=json",
    "test:watch": "jest --watch --coverage=false --bail=0",
    "test:coverage": "jest --verbose",
    "test:coverage:html": "jest && open coverage/lcov-report/index.html",
    "test:no-coverage": "jest --coverage=false --bail=0",
    "test:unit": "JEST_UNIT_ONLY=true jest --coverage=false",
    "test:unit:watch": "JEST_UNIT_ONLY=true jest --watch --coverage=false",
    "test:unit:coverage": "JEST_UNIT_ONLY=true jest --coverage",
    "test:integration": "JEST_INTEGRATION_ONLY=true jest --coverage=false",
    "test:integration:watch": "JEST_INTEGRATION_ONLY=true jest --watch --coverage=false",
    "test:blargg": "JEST_INTEGRATION_ONLY=true jest blargg --coverage=false",
    "test:cpu": "jest --testPathPatterns=cpu --verbose",
    "test:ppu": "jest --testPathPatterns=ppu --verbose",
    "test:memory": "jest --testPathPatterns=memory --verbose",
    "test:debug": "jest --verbose --detectOpenHandles --forceExit --coverage=false --bail=0",
    "test:regression": "jest tests/emulator/integration/blargg.regression.test.ts --verbose",
    "test:regression:watch": "jest tests/emulator/integration/blargg.regression.test.ts --watch",
    "test:boundaries": "jest tests/emulator/cpu/unit/rgbds.boundary.validation.test.ts --verbose",
    "test:add-hl": "jest tests/emulator/cpu/unit/add-hl-family.half-carry.test.ts --verbose",
    "test:sbc": "jest tests/emulator/cpu/unit/sbc-a-imm.half-carry.test.ts --verbose",
    "test:progression": "jest tests/emulator/integration/blargg.failing.progression.test.ts --verbose",
    "test:tdd-cycle": "npm run test:add-hl && npm run test:sbc && npm run test:regression",
    "test:quick-validation": "npm run test:fast && npm run typecheck && npm run lint",
    "test:performance": "node scripts/test-performance.js",
    "test:fast": "jest --coverage=false --maxWorkers=100% --cache --workerThreads --testTimeout=15000",
    "test:parallel:blargg": "JEST_INTEGRATION_ONLY=true jest blargg --coverage=false --maxWorkers=75% --testTimeout=120000",
    "test:parallel:unit": "jest --testPathPatterns='(cpu|mmu)' --coverage=false --maxWorkers=100% --testTimeout=15000",
    "test:parallel:display": "jest --testPathPatterns=display --coverage=false --maxWorkers=50% --testTimeout=30000",
    "test:all:optimized": "npm run test:parallel:unit && npm run test:parallel:display && npm run test:parallel:blargg",
    "test:monitor": "time npm test",
    "test:parallel:diagnostic": "JEST_DEBUG_CONFIG=true jest --coverage=false --maxWorkers=100% --workerThreads --verbose tests/counter.test.ts tests/demo/demo.test.ts",
    "test:worker:benchmark": "echo 'Testing with different worker counts:' && time jest --coverage=false --maxWorkers=1 tests/counter.test.ts && time jest --coverage=false --maxWorkers=50% tests/counter.test.ts && time jest --coverage=false --maxWorkers=100% tests/counter.test.ts",
    "codegen": "tsx scripts/codegen/generateInstructions.ts",
    "codegen:check": "tsx scripts/codegen/checkGenerated.ts",
    "codegen:force": "npm run codegen",
    "codegen:clean": "tsx scripts/codegen/cleanGenerated.ts",
    "codegen:verify": "npm run codegen:check && tsx scripts/codegen/validateTemplates.ts",
    "codegen:verify:quick": "tsx scripts/codegen/validateTemplates.ts --incremental --errors-only",
    "codegen:verify:full": "tsx scripts/codegen/validateTemplates.ts --verbose",
    "codegen:incremental": "tsx scripts/codegen/incrementalGeneration.ts",
    "codegen:changes": "tsx scripts/codegen/changeDetection.ts",
    "validate": "npm run codegen:check && npm run lint:fix && npm run format && npm run typecheck && npm run test && npm run build",
    "generate-license-report": "license-report --output=table > LICENSES.md",
    "prepare": "husky"
  },
  "devDependencies": {
    "@eslint/js": "^9.32.0",
    "@types/jest": "^30.0.0",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "eslint": "^9.32.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.3",
    "globals": "^16.3.0",
    "husky": "^9.1.7",
    "jest": "^30.0.5",
    "jest-environment-jsdom": "^30.0.5",
    "jsdom": "^26.1.0",
    "license-report": "^6.8.0",
    "lint-staged": "^16.1.2",
    "prettier": "^3.6.2",
    "terser": "^5.43.1",
    "ts-jest": "^29.4.0",
    "tsx": "^4.19.1",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.38.0",
    "vite": "^7.0.4"
  }
}
