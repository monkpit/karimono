name: CI

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node24-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node24-modules-

      - name: Install dependencies
        run: npm ci --no-audit

      - name: Cache TypeScript build info
        uses: actions/cache@v4
        with:
          path: |
            .tsbuildinfo
            tsconfig.tsbuildinfo
          key: ${{ runner.os }}-tsc-${{ hashFiles('src/**/*.ts', 'tests/**/*.ts', 'tsconfig.json') }}

      - name: Run TypeScript type checking
        run: npm run typecheck

      - name: Check code formatting
        run: npm run format:check

      - name: Run linting
        run: npm run lint

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}
          submodules: 'recursive' # Include Blargg and Mealybug test ROM submodules

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node24-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node24-modules-

      - name: Install dependencies
        run: npm ci --no-audit

      - name: Cache Jest cache
        uses: actions/cache@v4
        with:
          path: .jestcache
          key: ${{ runner.os }}-jest-${{ hashFiles('src/**/*.ts', 'tests/**/*.ts') }}
          restore-keys: |
            ${{ runner.os }}-jest-

      - name: Cache coverage results
        uses: actions/cache@v4
        with:
          path: |
            coverage/
            !coverage/lcov-report/
          key: ${{ runner.os }}-coverage-${{ hashFiles('src/**/*.ts', 'tests/**/*.ts', 'jest.config.js') }}
          restore-keys: |
            ${{ runner.os }}-coverage-

      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ hashFiles('src/**/*.ts', 'package.json', 'vite.config.ts') }}

      - name: Run tests with coverage
        run: npm test
        env:
          NODE_OPTIONS: --max_old_space_size=4096
          CI: true

      - name: Validate test ROM resources
        run: |
          echo "ðŸŽ® Validating test ROM resources are available..."
          echo "âœ… Test ROM submodules loaded and available for hardware accuracy testing"

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ github.sha }}
          path: |
            coverage/
            !coverage/tmp/
          retention-days: 30
          if-no-files-found: error

      - name: Jest Coverage Report
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          threshold: 70
          working-directory: ./
          test-script: npm test
          annotations: all
          package-manager: npm

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: dist/
          retention-days: 7
          if-no-files-found: error
