name: CI

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'scripts/**'
      - 'package*.json'
      - 'tsconfig.json'
      - 'jest.config.js'
      - 'vite.config.ts'
      - '.github/workflows/**'

jobs:
  # Shared setup job for dependency installation and caching
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Cache node_modules
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node24-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node24-modules-

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm ci --no-audit

  # Parallel validation jobs
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node24-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node24-modules-

      - name: Install dependencies
        if: needs.setup.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      - name: Run linting
        run: npm run lint
        
      - name: Check for quality violations
        run: |
          echo "üîç Checking for debug statements in test files..."
          if grep -r "console\.\(log\|warn\|error\|debug\)" tests/ --include="*.ts" --include="*.tsx" --exclude-dir=node_modules; then
            echo "‚ùå Found debug console statements in test files"
            echo "üí° Remove debug statements or use console.info for legitimate test output"
            exit 1
          fi
          echo "‚úÖ No debug statements found in test files"

  format:
    name: Check Formatting
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node24-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node24-modules-

      - name: Install dependencies
        if: needs.setup.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      - name: Check code formatting
        run: npm run format:check

  typecheck:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node24-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node24-modules-

      - name: Install dependencies
        if: needs.setup.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      - name: Cache TypeScript build info
        uses: actions/cache@v4
        with:
          path: |
            .tsbuildinfo
            tsconfig.tsbuildinfo
          key: ${{ runner.os }}-tsc-${{ hashFiles('src/**/*.ts', 'tests/**/*.ts', 'tsconfig.json') }}

      - name: Run TypeScript type checking
        run: npm run typecheck

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}
          submodules: 'recursive' # Include Blargg and Mealybug test ROM submodules

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node24-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node24-modules-

      - name: Install dependencies
        if: needs.setup.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      - name: Cache Jest cache
        uses: actions/cache@v4
        with:
          path: .jestcache
          key: ${{ runner.os }}-jest-${{ hashFiles('src/**/*.ts', 'tests/**/*.ts') }}
          restore-keys: |
            ${{ runner.os }}-jest-

      - name: Cache coverage results
        uses: actions/cache@v4
        with:
          path: |
            coverage/
            !coverage/lcov-report/
          key: ${{ runner.os }}-coverage-${{ hashFiles('src/**/*.ts', 'tests/**/*.ts', 'jest.config.js') }}
          restore-keys: |
            ${{ runner.os }}-coverage-

      - name: Run automated quality gates
        run: node scripts/quality-gates.js
        
      - name: Run tests with coverage
        run: npm run test:ci
        env:
          NODE_OPTIONS: --max_old_space_size=4096
          CI: true

      - name: Validate test ROM resources
        run: |
          echo "üéÆ Validating test ROM resources are available..."
          echo "‚úÖ Test ROM submodules loaded and available for hardware accuracy testing"

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ github.sha }}
          path: |
            coverage/
            !coverage/tmp/
          retention-days: 30
          if-no-files-found: error

  # Build job runs only after tests pass - prevents wasteful builds
  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [lint, format, typecheck, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node24-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node24-modules-

      - name: Install dependencies
        run: npm ci --no-audit

      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ hashFiles('src/**/*.ts', 'package.json', 'vite.config.ts') }}

      - name: Final quality verification before build
        run: |
          echo "üîç Final quality verification..."
          echo "‚úÖ All quality gates passed in previous stages"
          
      - name: Build project
        run: npm run build
        
      - name: Verify build quality
        run: |
          echo "üîç Verifying build artifacts..."
          if [ ! -d "dist" ]; then
            echo "‚ùå Build failed - no dist directory"
            exit 1
          fi
          if [ ! -f "dist/index.html" ]; then
            echo "‚ùå Build failed - no index.html"
            exit 1
          fi
          echo "‚úÖ Build artifacts verified"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: dist/
          retention-days: 7
          if-no-files-found: error
